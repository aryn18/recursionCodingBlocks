package Recursion;

#include<bits/stdc++.h>
using namespace std;
int n,board[11][11],sum=0,pathfind;
void funky_chess(int i,int j,int count){
	if(i<0 ||i>10 || j<0 || j>10 || board[i][j]==0){
		return;
	}
	board[i][j]=0;
    pathfind=max(pathfind,count+1);
    funky_chess(i-2,j+1,count+1);
	funky_chess(i-2,j-1,count+1);
	funky_chess(i-1,j-2,count+1);
	funky_chess(i-1,j+2,count+1);
	funky_chess(i+1,j-2,count+1);
	funky_chess(i+1,j+2,count+1);
	funky_chess(i+2,j-1,count+1);
	funky_chess(i+2,j+1,count+1);
	board[i][j]=1;
}
int main() {
	cin>>n;
	for(int i=0;i<n;i++){
		 for(int j=0;j<n;j++){
			 cin>>board[i][j];
			 if(board[i][j]){
				 sum++;
			 }
		 }

	}
	pathfind=0;
	funky_chess(0,0,0);
	cout<<sum-pathfind<<endl;

	return 0;
}

